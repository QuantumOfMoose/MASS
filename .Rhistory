scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18)) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "olm resid"), linetype = "dotted", size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "rlm resid"), linetype = "dotted", size = 0.4, color = "royalblue") +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18)) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "olm resid"), linetype = "dotted", size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "rlm resid"), linetype = "dotted", size = 0.4, color = "royalblue") +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18)) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, thing = "olm resid"), linetype = "dotted", size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, thing = "rlm resid"), linetype = "dotted", size = 0.4, color = "royalblue") +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18)) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, alpha = "olm resid"), linetype = "dotted", size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, alpha = "rlm resid"), linetype = "dotted", size = 0.4, color = "royalblue") +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18)) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "olm resid"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "rlm resid"), size = 0.4, color = "royalblue") +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18)) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "olm resid"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "rlm resid"), size = 0.4, color = "royalblue") +
scale_linetype_manual(values = c("dotted", 'dotted')) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18)) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue', 'olm resid'='lightcoral', 'rlm resid'='royalblue')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, color = "olm resid"), linetype = "dotted", size = 0.4) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, color = "rlm resid"), linetype = "dotted", size = 0.4) +
#scale_color_manual(values = c("dotted", 'dotted')) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18)) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "olm resid"), linetype = "dotted", size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "rlm resid"), linetype = "dotted", size = 0.4, color = "royalblue") +
scale_linetype_manual(values = c("dotted", 'dotted')) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18)) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "olm resid"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "rlm resid"), size = 0.4, color = "royalblue") +
scale_linetype_manual(values = c("dotted", 'dotted')) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18)) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "olm resid"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "rlm resid"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c("dotted", 'dotted'), guide=guide_legend(overide.aes = list(color = c('lightcoral', 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c("dotted", 'dotted'), guide=guide_legend(overide.aes = list(color = c('lightcoral', 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c("dotted", 'dotted'), guide=guide_legend(overide.aes = list(colour = c('lightcoral', 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c("dotted", 'dashed'), guide=guide_legend(overide.aes = list(colour = c('lightcoral', 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c("dotted", 'dotted'), guide=guide_legend(overide.aes = list(shape = c(NA,NA), color = c('lightcoral', 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c("dotted", 'dotted'), guide=guide_legend(overide.aes = list(size = c(0.6, 0.6), color = c('lightcoral', 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c('dotted', 'dotted'), guide=guide_legend(overide.aes = list(size = c(0.6, 0.6), color = c("lightcoral", 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable), lty = as.factor(variable)))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c('dotted', 'dotted'), guide=guide_legend(overide.aes = list(size = c(0.6, 0.6), color = c("lightcoral", 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable), lty = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c('dotted', 'dotted'), guide=guide_legend(overide.aes = list(size = c(0.6, 0.6), color = c("lightcoral", 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c('dotted', 'dotted'), guide=guide_legend(override.aes = list(size = c(0.6, 0.6), color = c("lightcoral", 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c('dotted', 'dotted'), guide=guide_legend(override.aes = list(size = c(0.5, 0.5), color = c("lightcoral", 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('z.pure'='pure relationsip', 'z.clean'='random noise added', 'z'='noise and outliers', 'z.whuber'='from ordinary fit', 'z.robust'='from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('pure relationsip', 'random noise added', 'noise and outliers', 'from ordinary fit', 'from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c('dotted', 'dotted'), guide=guide_legend(override.aes = list(size = c(0.5, 0.5), color = c("lightcoral", 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.", title = "Generated and Fit Values of z")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('z.pure'='pure relationsip', 'z.clean'='random noise added', 'z'='noise and outliers', 'z.whuber'='from ordinary fit', 'z.robust'='from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('z.pure'='pure relationsip', 'z.clean'='random noise added', 'z'='noise and outliers', 'z.whuber'='from ordinary fit', 'z.robust'='from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c('dotted', 'dotted'), guide=guide_legend(override.aes = list(size = c(0.5, 0.5), color = c("lightcoral", 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "Origin of z.", color = "Origin of z.", title = "Generated and Fit Values of z")
betterplot2
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('z.pure'='pure relationsip', 'z.clean'='random noise added', 'z'='noise and outliers', 'z.whuber'='from ordinary fit', 'z.robust'='from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('z.pure'='pure relationsip', 'z.clean'='random noise added', 'z'='noise and outliers', 'z.whuber'='from ordinary fit', 'z.robust'='from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c('dotted', 'dotted'), guide=guide_legend(override.aes = list(size = c(0.5, 0.5), color = c("lightcoral", 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "z values", color = "z values", title = "Generated and Fit Values of z")
betterplot2
beta <- c(-20+5i, complex(argument=2*pi/3, modulus=3/2)) ### The fist is the intercept, the 2nd the slope.
print(beta)
sigma <- 1.5; rho <- 0.7 # Parameters of the error distribution
set.seed(17)
e <- mvrnorm(n, c(0,0), matrix(c(1,rho,rho,1)*sigma^2, 2)) ### A bunch of random numbers to add errors to the example data.
e <- complex(real=e[,1], imaginary=e[,2]) ### Make those random numbers complex.
z <- as.vector((desX <- cbind(rep(1,n), w)) %*% beta + e) ### The design matrix desX is defined in this line.
z.pure <- as.vector((desX <- cbind(rep(1,n), w)) %*% beta) # z data without the noise.
#
# Add m outliers to z. Draw the outliers from a
#
z.clean <- z # Preserve outlier free z.
m <- 3
outlier.pos <- sample(1:n, m) # Positions of outliers in z.
outliers <- mvrnorm(m, c(5.8, -7.32),  matrix(c(1,rho,rho,1)*sigma^2, 2)) # The real and imaginary values of the outliers.
outliers <- complex(real=outliers[,1], imaginary=outliers[,2]) # Make the outliers comlex numbers.
z <- replace(z, outlier.pos, outliers)
#
# Collect everything into a dataframe.
#
fitframe <- data.frame(w, z.pure, z.clean, z)
#
# Whuber's ordinary complex linear fit.
#
print(beta.hat <- solve(Conj(t(desX)) %*% desX, Conj(t(desX)) %*% z), digits=4)
z.whuber <- beta.hat[2] * w + beta.hat[1]
fitframe$z.whuber <- z.whuber
fitframe$res.whuber <- as.vector(z - desX %*% beta.hat)
s.whuber <- sqrt(Re(mean(Conj(fitframe$res.whuber)*fitframe$res.whuber))) ### This might be standard deviation or something similar.
#
# Robust complex linear fit.
#
print(mytestfit <- rlm(x = w, y = z, interc = TRUE))
rbeta.hat <- mytestfit$coefficients
fitframe$z.robust <- mytestfit$coefficients[2] * w + mytestfit$coefficients[1]
fitframe$res.robust <- mytestfit$residuals
s.robust <- sqrt(Re(mean(Conj(fitframe$res.robust)*fitframe$res.robust))) ### This might be standard deviation or something similar.
#
beta <- c(-20+5i, complex(argument=2*pi/3, modulus=3/2)) ### The fist is the intercept, the 2nd the slope.
print(beta)
sigma <- 1.5; rho <- 0.7 # Parameters of the error distribution
set.seed(17)
e <- mvrnorm(n, c(0,0), matrix(c(1,rho,rho,1)*sigma^2, 2)) ### A bunch of random numbers to add errors to the example data.
e <- complex(real=e[,1], imaginary=e[,2]) ### Make those random numbers complex.
z <- as.vector((desX <- cbind(rep(1,n), w)) %*% beta + e) ### The design matrix desX is defined in this line.
z.pure <- as.vector((desX <- cbind(rep(1,n), w)) %*% beta) # z data without the noise.
#
# Add m outliers to z. Draw the outliers from a
#
z.clean <- z # Preserve outlier free z.
m <- 3
outlier.pos <- sample(1:n, m) # Positions of outliers in z.
outliers <- mvrnorm(m, c(5.8, -7.32),  matrix(c(1,rho,rho,1)*sigma^2, 2)) # The real and imaginary values of the outliers.
outliers <- complex(real=outliers[,1], imaginary=outliers[,2]) # Make the outliers comlex numbers.
z <- replace(z, outlier.pos, outliers)
#
# Collect everything into a dataframe.
#
fitframe <- data.frame(w, z.pure, z.clean, z)
#
# Whuber's ordinary complex linear fit.
#
print(beta.hat <- solve(Conj(t(desX)) %*% desX, Conj(t(desX)) %*% z), digits=4)
z.whuber <- beta.hat[2] * w + beta.hat[1]
fitframe$z.whuber <- z.whuber
fitframe$res.whuber <- as.vector(z - desX %*% beta.hat)
s.whuber <- sqrt(Re(mean(Conj(fitframe$res.whuber)*fitframe$res.whuber))) ### This might be standard deviation or something similar.
#
# Robust complex linear fit.
#
print(mytestfit <- rlm(x = w, y = z, interc = TRUE))
rbeta.hat <- mytestfit$coefficients
fitframe$z.robust <- mytestfit$coefficients[2] * w + mytestfit$coefficients[1]
fitframe$res.robust <- mytestfit$residuals
s.robust <- sqrt(Re(mean(Conj(fitframe$res.robust)*fitframe$res.robust))) ### This might be standard deviation or something similar.
#
library(reshape2)
meltedfitframe <- melt(fitframe, id = "w")
meltedfitframe$variable <- factor(meltedfitframe$variable, ordered = TRUE)
betterplot2 <- ggplot(meltedfitframe[meltedfitframe$variable != "res.whuber" & meltedfitframe$variable != "res.robust",], aes(x = Re(value), y = Im(value), color = as.factor(variable), shape = as.factor(variable))) +
geom_point(size = 3) +
scale_shape_manual(values = c('z.pure'=19, 'z.clean'=0, 'z'=20, 'z.whuber'=18, 'z.robust'=18), labels = c('z.pure'='pure relationsip', 'z.clean'='random noise added', 'z'='noise and outliers', 'z.whuber'='from ordinary fit', 'z.robust'='from robust fit')) +
scale_color_manual(values = c('z.pure'="cyan2", 'z.clean'='forestgreen', 'z'='black', 'z.whuber'='red', 'z.robust'='blue'), labels = c('z.pure'='pure relationsip', 'z.clean'='random noise added', 'z'='noise and outliers', 'z.whuber'='from ordinary fit', 'z.robust'='from robust fit')) +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.whuber",], aes(group = w, lty = "ordinary lm"), size = 0.4, color = "lightcoral") +
geom_line(data = meltedfitframe[meltedfitframe$variable == "z" | meltedfitframe$variable == "z.robust",], aes(group = w, lty = "robust lm"), size = 0.4, color = "royalblue") +
scale_linetype_manual("Residuals", values = c('dotted', 'dotted'), guide=guide_legend(override.aes = list(size = c(0.5, 0.5), color = c("lightcoral", 'royalblue')))) +
labs(y = "Imaginary", x = "Real", shape = "z values", color = "z values", title = "Generated and Fit Values of z")
betterplot2
#### Now plot the residuals.
residframe <- data.frame(pure.whub <- fitframe$z.pure - fitframe$z.whuber, pure.rob <- fitframe$z.pure - fitframe$z.robust,
clean.whub <- fitframe$z.clean - fitframe$z.whuber, clean.rob <- fitframe$z.clean - fitframe$z.robust,
zz.whuber <- fitframe$res.whuber, zz.robust <- fitframe$res.robust)
#### Now plot the residuals.
residframe <- data.frame(w <- w, pure.whub <- fitframe$z.pure - fitframe$z.whuber, pure.rob <- fitframe$z.pure - fitframe$z.robust,
clean.whub <- fitframe$z.clean - fitframe$z.whuber, clean.rob <- fitframe$z.clean - fitframe$z.robust,
zz.whuber <- fitframe$res.whuber, zz.robust <- fitframe$res.robust)
meltresidframe <- melt(residframe, id = "w")
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_point()
meltresidframe <- melt(residframe, id = "w")
#### Now plot the residuals.
residframe <- data.frame(w = w, pure.whub = fitframe$z.pure - fitframe$z.whuber, pure.rob = fitframe$z.pure - fitframe$z.robust,
clean.whub = fitframe$z.clean - fitframe$z.whuber, clean.rob = fitframe$z.clean - fitframe$z.robust,
zz.whuber = fitframe$res.whuber, zz.robust = fitframe$res.robust)
meltresidframe <- melt(residframe, id = "w")
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_point()
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_point() +
facet_grid(vars(variable))
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_point() +
facet_grid(vars(variable), nrow = 2, ncol = 3)
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_point() +
facet_wrap(vars(variable), nrow = 2, ncol = 3)
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_point() +
facet_wrap(vars(variable), nrow = 3, ncol = 2)
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), y = Im(value))) +
facet_wrap(vars(variable), nrow = 3, ncol = 2) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = NULL)
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(variable), nrow = 3, ncol = 2) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = NULL)
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(variable), nrow = 3, ncol = 2, labeller = labeller(c("z.pure - z.whuber", 'z.pure - z.robust', 'z.clean - z.whuber', 'z.clean - z.robust', 'z - z.wuber', 'z - z.robust'))) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = NULL)
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(variable), nrow = 3, ncol = 2, labeller = label_value(c("z.pure - z.whuber", 'z.pure - z.robust', 'z.clean - z.whuber', 'z.clean - z.robust', 'z - z.wuber', 'z - z.robust'))) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = NULL)
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(variable), nrow = 3, ncol = 2, labeller = label_wrap_gen(c("z.pure - z.whuber", 'z.pure - z.robust', 'z.clean - z.whuber', 'z.clean - z.robust', 'z - z.wuber', 'z - z.robust'))) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = NULL)
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(variable), nrow = 3, ncol = 2)) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = NULL)
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(variable), nrow = 3, ncol = 2) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = NULL)
residplot
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(variable), nrow = 3, ncol = 2) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = "none")
residplot
else 'z - z.rlm'
else if (varr = 'zz.robust') z - z.rlm'
}
meltresidframe$label <-
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(variable), nrow = 3, ncol = 2) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = "none")
residplot
else if (varr = 'zz.robust') 'z - z.rlm'
if (varr = 'zz.robust') 'z - z.rlm'
if (varr == 'zz.robust') 'z - z.rlm'
assign_label <- function(varr) {
if (vvar == 'pure.whub') 'z.pure - z.olm'
if (varr == 'pure.rob') 'z.pure - z.rlm'
if (varr == 'clean.wub') 'z.clean - z.olm'
if (varr == 'clean.rob') 'z.clean - z.rlm'
if (varr == 'zz.whuber') 'z - z.olm'
if (varr == 'zz.robust') 'z - z.rlm'
}
meltresidframe$label <- assign_label(meltresidframe$variable)
if (varr == 'pure.whub') 'z.pure - z.olm'
if (varr == 'pure.rob') 'z.pure - z.rlm'
assign_label <- function(varr) {
if (varr == 'pure.whub') 'z.pure - z.olm'
if (varr == 'pure.rob') 'z.pure - z.rlm'
if (varr == 'clean.wub') 'z.clean - z.olm'
if (varr == 'clean.rob') 'z.clean - z.rlm'
if (varr == 'zz.whuber') 'z - z.olm'
if (varr == 'zz.robust') 'z - z.rlm'
}
meltresidframe$label <- assign_label(meltresidframe$variable)
View(meltresidframe)
meltresidframe$label <- assign_label(meltresidframe$variable[,])
meltresidframe$label <- apply(meltresidframe$variable, 1, assign_label)
dim(meltresidframe$variable)
meltresidframe$label <- lapply(meltresidframe$variable, 1, assign_label)
meltresidframe$label <- lapply(meltresidframe$variable, assign_label)
View(meltresidframe)
meltresidframe$label <- sapply(meltresidframe$variable, assign_label)
meltresidframe$label <- as.vector(sapply(meltresidframe$variable, assign_label))
dim(meltresidframe$variable)
View(meltresidframe)
meltresidframe$label <- as.factor(sapply(meltresidframe$variable, assign_label))
meltresidframe$label <- (vapply(meltresidframe$variable, assign_label))
if (varr == 'zz.robust') return('z - z.rlm')
assign_label <- function(varr) {
if (varr == 'pure.whub') return('z.pure - z.olm')
if (varr == 'pure.rob') return('z.pure - z.rlm')
if (varr == 'clean.wub') return('z.clean - z.olm')
if (varr == 'clean.rob') return('z.clean - z.rlm')
if (varr == 'zz.whuber') return('z - z.olm')
if (varr == 'zz.robust') return('z - z.rlm')
}
meltresidframe$label <- (vapply(meltresidframe$variable, assign_label))
meltresidframe$label <- (lapply(meltresidframe$variable, assign_label))
View(meltresidframe)
assign_label <- function(varr) {
if (varr == 'pure.whub') return('z.pure - z.olm')
if (varr == 'pure.rob') return('z.pure - z.rlm')
if (varr == 'clean.whub') return('z.clean - z.olm')
if (varr == 'clean.rob') return('z.clean - z.rlm')
if (varr == 'zz.whuber') return('z - z.olm')
if (varr == 'zz.robust') return('z - z.rlm')
}
meltresidframe$label <- (lapply(meltresidframe$variable, assign_label))
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(label), nrow = 3, ncol = 2) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = "none")
residplot
facet_wrap(vars(as.factor(label), nrow = 3, ncol = 2) +
theme(legend.position = "none")
facet_wrap(vars(as.factor(label), nrow = 3, ncol = 2) +
theme(legend.position = "none")
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(as.factor(label)), nrow = 3, ncol = 2) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = "none")
residplot
meltresidframe$label <- c((lapply(meltresidframe$variable, assign_label)))
meltresidframe$label <- as.vector(lapply(meltresidframe$variable, assign_label))
meltresidframe$label <- cbind(lapply(meltresidframe$variable, assign_label))
meltresidframe$label <- unlist(lapply(meltresidframe$variable, assign_label))
meltresidframe$label <- as.factor(unlist(lapply(meltresidframe$variable, assign_label)))
residplot <- ggplot(meltresidframe, aes(x = Re(value), y = Im(value), color = as.factor(variable))) +
geom_segment(aes(x = 0, y = 0, xend = Re(value), yend = Im(value))) +
facet_wrap(vars(label), nrow = 3, ncol = 2) +
labs(y = "imaginary", x = "real", title = "Complex Residuals") +
theme(legend.position = "none")
residplot
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value), group = label, color = Arg(value))) +
geom_jitter()
absresidplot
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value), x = label, color = Arg(value))) +
geom_jitter()
absresidplot
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value), x = label, color = Arg(value))) +
geom_jitter(width = 0.1) +
scale_colour_gradientn(colours=rainbow(4))
absresidplot
scale_colour_gradientn(colours=rainbow
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value), x = label, color = Arg(value))) +
geom_jitter(width = 0.1) +
scale_colour_gradientn(colours=rainbow)
absresidplot
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value), x = label, color = Arg(value))) +
geom_jitter(width = 0.1) +
scale_colour_gradient(colours=rainbow)
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value), x = label, color = Arg(value))) +
geom_jitter(width = 0.1) +
scale_colour_gradient(colours=rainbow(6, start = 0, end = 1))
absresidplot
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value), x = label, color = Arg(value))) +
geom_jitter(width = 0.1) +
scale_colour_gradientn(colours=rainbow(6, start = 0, end = 1))
absresidplot
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value), x = label, color = Arg(value))) +
geom_jitter(width = 0.1) +
scale_colour_gradientn(colours=rainbow(6, start = 0, end = 1, s = 0.4))
absresidplot
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value), x = label, color = Arg(value))) +
geom_jitter(width = 0.1) +
scale_colour_gradientn(colours=rainbow(6, start = 0, end = 1, s = 1, v = 0.4))
absresidplot
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value), x = label, color = Arg(value))) +
geom_jitter(width = 0.1) +
scale_colour_gradientn(colours=rainbow(6, start = 0, end = 1, s = 1, v = 0.8))
absresidplot
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value)^2, x = label, color = Arg(value))) +
geom_jitter(width = 0.1) +
scale_colour_gradientn(colours=rainbow(6, start = 0, end = 1, s = 1, v = 0.8)) +
labs()
absresidplot
absresidplot <- ggplot(meltresidframe, aes(y = Mod(value)^2, x = label, color = Arg(value))) +
geom_jitter(width = 0.1) +
scale_colour_gradientn(colours=rainbow(6, start = 0, end = 1, s = 1, v = 0.8)) +
labs(y = "Modulus Squared", x = "Residual", color = 'Argument', title = "Squared Modulus of Residuals")
absresidplot
